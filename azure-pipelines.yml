trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

pool:
  name: AgentPool

variables:
  AWS_SERVICE_CONNECTION: 'aws'

parameters:
- name: action
  type: string
  default: 'apply'
  values:
  - plan
  - apply
  - destroy

- name: workspace
  displayName: 'choose workspace'
  type: string
  default: 'dev'
  values:
  - dev
  - prod

steps:
- script: |
    echo "Starting the pipeline execution"
  displayName: 'Initial Step'

- task: AWSShellScript@1
  inputs:
    awsCredentials: '$(AWS_SERVICE_CONNECTION)'
    regionName: 'us-east-1'
    scriptType: 'inline'
    inlineScript: |
      cd TerraformCode
      terraform init  

      # Create or select Terraform workspace
      terraform workspace select ${{ parameters.workspace }} || terraform workspace new ${{ parameters.workspace }}

      # Run Terraform plan for pull requests on main
      if [ "$(Build.Reason)" == "PullRequest" ]; then
        terraform plan -var-file=${{ parameters.workspace }}-variables.tfvars

      # Run Terraform apply for merge/push on main 
      elif [ "$(Build.Reason)" == "IndividualCI" ]; then
         terraform apply -auto-approve -var-file=${{ parameters.workspace }}-variables.tfvars

       # Run Terraform apply or destroy for manual runs 
      elif [ "$(Build.Reason)" == "Manual" ]; then

        if [ "${{ parameters.action }}" == "apply" ]; then
          terraform apply -auto-approve -var-file=${{ parameters.workspace }}-variables.tfvars
    
        elif [ "${{ parameters.action }}" == "destroy" ]; then
          terraform destroy -auto-approve -var-file=${{ parameters.workspace }}-variables.tfvars

        else
          echo "Invalid action selected. Please choose either 'apply' or 'destroy'."
          exit 1
        fi
        
      fi
  displayName: 'Run Terraform'
