trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

pool:
  name: Agentpool

variables:
  AWS_SERVICE_CONNECTION: 'aws'

parameters:
  - name: action
    displayName: 'choose'
    type: string
    default: 'apply'
    values:
      - apply
      - destroy

  - name: workspace
    displayName: 'Terraform Workspace Choice'
    type: string
    default: 'dev'
    values:
      - dev
      - prod

steps:
  - script: |
      echo testsuccess
    displayName: 'test'
    
  - task: AWSShellScript@1
    inputs:
      awsCredentials: '$(AWS_SERVICE_CONNECTION)'
      regionName: 'us-east-1'
      scriptType: 'inline'
      inlineScript: |
        terraform init  

        # Create or select Terraform workspace
        if ! terraform workspace select ${{ parameters.workspace }}; then
          terraform workspace new ${{ parameters.workspace }}
        fi

        # Run Terraform plan for pull requests on main
        if [ "$(Build.Reason)" = "PullRequest" ]; then
          terraform plan -var-file=${{ parameters.workspace }}.tfvars

        # Run Terraform apply for merge/push on main 
        elif [ "$(Build.Reason)" = "IndividualCI" ]; then
          terraform apply -auto-approve -var-file=${{ parameters.workspace }}.tfvars

        # Run Terraform apply or destroy for manual runs 
        elif [ "$(Build.Reason)" = "Manual" ]; then
          if [ "${{ parameters.action }}" = "apply" ]; then
            terraform apply -auto-approve -var-file=${{ parameters.workspace }}.tfvars
          elif [ "${{ parameters.action }}" = "destroy" ]; then
            terraform destroy -auto-approve -var-file=${{ parameters.workspace }}.tfvars
          else
            echo "Invalid action selected. Please choose either 'apply' or 'destroy'."
            exit 1
          fi
        fi
    displayName: 'terrafrom code'
